[GENERAL]
## a section with that language key needs to
## exist in i18n.conf and needs to cover all
## variables defined in the 'en'-section
language = en
## log session id alongside a subject id
log_session = yes

## window size of the experiment, implies windowed mode as
## opposed to fullscreen; on android the experiment will still
## run in full screen but with less resolution
## [no default; e.g. 800, 600]
# window_size = 1280, 800
## the following DPI settings are suggested to be set if you
## use mm, cm, or in to describe dimensions
## DPI is estimated in this order by
## (1) set dpi [no default]
# dpi =
## (2) on android devices the DPI is read from the device
## (3) calculating the DPI by using window_size and
## screen_diagonal [no default; only works in full screen mode]
## [can be set in in or cm, e.g. 13.3in, 50cm]
# screen_diagonal =
## (4) a fallback DPI when no device DPI could be identified
# fallback_dpi = 96

[PRACTICE]
## remove section to skip practice
## default amount of targets in a practice trial
num_targets = 6

[DESIGN]
# number of blocks
blocks = 2

## all of the following values can be one of these values to
## repeat for all blocks, or as many values as there
## are blocks and separated by commas; in case of two blocks:
## e.g. target_titles = 123 OR target_titles = 123, abc
## three values for two blocks or vice versa causes an error
## amount of trials (i.e. trails to make per block)
trials = 1
## default amount of targets per trial
num_targets = 5, 10
## the labels of targets, the values below are possible, and
## continued as is to be expected; note that '1a2' is alternating
## numbers and the alphabet, whereas '1b2' is skipping labels
## maximum number of targets are 26 for 'abc', '1b2', and 'a2c',
## 52 for '1a2', 'a1b', etc, and 99 for '123'
## one of: 123, abc, 1a2, a1b, A1B, 1A2, 1b2, a2c
target_titles = 123, 1a2
## timeout for the task in seconds; when this time was reached
## this the task will be ended automatically
timeout = 100, 200

## how to handle when the screen is not touched anymore
## reset : remove all lines drawn and start with the first
## circle again, while time is continued [default]
## nothing : nothing happens
# on_pointer_release = reset

## how to handle a wrong circle
## repeat_last : participants needs to touch the last completed
## circle again, score decreases [default]
## highlight_only : wrong circle is highlighted, score
## decreases, target stays as before
# on_mismatched_circle = repeat_last

### DEFINED LAYOUTS
# FIXME do we need pre-set layouts to compare participants?
# if yes, would you like to draw them or generate randomly
# how would they deal with different amounts of circles if desired

[APPEARANCE]
## units for the following two options can be mm, cm, in,
## or no unit for pixels
## the radius of circles
# target_radius = 5mm
## line width for drawing
# line_width = 1.5mm

## size of text on a target relative to its radius
# stimulus_relative_text_size = 1.5
## baseline correction of the text in the circles relative
## to radius. this depends on text size and font, and corrects
## for the non-existent part of text below the line
# stimulus_text_correction_y = 0.2
## font of the text in the circle, None for Standard font,
## otherwise a font name without spaces, e.g. 'timesnewroman',
## 'arial', 'courier', or 'console'. this will affect the
## size of the text even though font size remains constant
# target_font = sans

## minimum distance between circles in multiple of radius;
## 2 means the closest they can get is touching each other
## too high values mean that circles will be almost presented
## in a grid-like way with high target numbers, whereas low
## values can mean clustering the exact values when this occurs
## depend on the screen size
# min_distance_of_targets = 4
## if the minimum distance is too high and circles are too big
## the program will stall. this setting aborts the positioning
## after the amount of attempts specified to place a circle in
## the existing surroundings. it then reduces the minimum
## distance requirement by .05 of the target radius
# attempts_before_reducing_min_distance = 200

#### COLOURS
## Colours are presented in RGB format
## colour of the drawn line
# colour_line = 0, 255, 0
## colour of targets
# colour_target = 255, 255, 0
## colour of text on tagets
# colour_target_label = 0, 0, 0
## colour of any circle touched in the right order
# colour_target_done = 0, 255, 0
## colour of any circle touched wrongly
# colour_target_error = 255, 0, 0
## colour of the circle to go back to
# colour_target_hint = 0, 255, 0
## colour of the window boundary, None for no boundary
## this is helpful if the resolution you choose does not match
## the screen resolution on an android device
# colour_window_boundary = None

## anti aliasing is about whether to smoothen edges; unused
## in the android app and other setups running expyriment 0.7.0
## as it does not support antialiasing for circles
# antialiasing = yes

[LOG]
## Subject and session are always the first two columns,
## block and trial the third and fourth column, if applicable.
## Comment or remove any of the lines to not use the
## respective log output.

## Columns to log for each trial in the an expyriment-created
## .xpd-file (csv with comments). This file is unique to each
## participant and named by timestamp, subject and session id.
## NOTE: practice trials are not logged.
## Here, every event occurring in the trail making task is
## logged, which is one of; for what an event is, see below.
## settings input: timeout, num_targets, target_titles
## user responses:
##   - event : event that triggered the log; one of:
##     correct_touch, wrong_touch, lost_touch, timeout, finish
##   - distance, time : when the event occurred
##   - current_target : the target number that needed to be
##     connected when that event occurred
cols_trial = num_targets, target_titles, distance, time, event, current_target

## Columns to log for each executed block in an aggregated csv
## file. Note that every completed trail is logged to the
## blocks-file. Aggregation functions may be used, but a few
## convenience values are provided:
## time : time in ms taken to complete the task
## distance : the distance travelled in pixel
## num_lost_touch : amount of times the user lost touch
## num_wrong_targets : the number of wrong targets connected
## num_done_targets : the highest target number connected
## min_distance : the minimum distance necessary to connect all
##     items if connected by straight lines
## ratio_min_distance : distance travelled divided by the
##     minimum distance
## NOTE: practice trials are not logged.
cols_block = trial, time, distance, min_distance, num_lost_touch, num_wrong_targets, num_done_targets
block_summary_file = blocks.csv

## NOTE: practice trials are not logged.
# cols_experiment = mean(num_wrong_targets), mean(num_lost_touch), sum(num_done_targets), mean(ratio_min_distance)
# experiment_summary_file = sessions.csv

